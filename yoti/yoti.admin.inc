<?php

/**
 * @file
 * Admin page callback file for the yoti module.
 */

use Yoti\YotiClient;

/**
 * Page callback: Generates the appropriate yoti administration form.
 *
 * This function generates yoti settings form.
 *
 * @return mixed
 *   A renderable form array for yoti settings.
 */
function yoti_api_keys_settings($form, &$form_state) {
  // Make sure private path exists, if not, create it.
  $uploadDir = YotiHelper::uploadDir(TRUE);
  if ($uploadDir && !is_dir($uploadDir)) {
    mkdir($uploadDir, 0777, TRUE);
  }

  $form['some_text'] = array(
    '#markup' => '<div>' .
    t('You need to first create a Yoti App at <a href="@yoti-dev" target="_blank">@yoti-dev</a>.', array('@yoti-dev' => YotiClient::DASHBOARD_URL)) . '</br >' .
    t('Note: On the Yoti Dashboard the callback URL should be set to:') . ' <strong>' . url('/yoti/link', array('absolute' => TRUE)) . '</strong>' .
    '</div>',
  );

  $form['#attributes'] = array(
    'enctype' => "multipart/form-data",
  );

  $form['yoti_settings']['yoti_app_id'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => t('App ID'),
    '#default_value' => variable_get('yoti_app_id'),
    '#description' => t('App ID is a unique identifier for your specific application.'),
  );

  $form['yoti_settings']['yoti_scenario_id'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => t('Scenario ID'),
    '#default_value' => variable_get('yoti_scenario_id'),
    '#description' => t('Scenario ID is used to render the inline QR code.'),
  );

  $form['yoti_settings']['yoti_sdk_id'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => t('SDK ID'),
    '#default_value' => variable_get('yoti_sdk_id'),
    '#description' => t('SDK ID is the SDK identifier generated by Yoti Dashboard.'),
  );

  $form['yoti_settings']['yoti_success_url'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => t('Success URL'),
    '#default_value' => variable_get('yoti_success_url', '/user'),
    '#description' => t('Redirect users here if they successfully login with Yoti'),
  );

  $form['yoti_settings']['yoti_fail_url'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => t('Fail URL'),
    '#default_value' => variable_get('yoti_fail_url', '/'),
    '#description' => t('Redirect users here if they were unable to login with Yoti'),
  );

  $form['yoti_settings']['yoti_pem'] = array(
    '#type' => 'managed_file',
    '#field_name' => 'yoti_pem',
    '#required' => TRUE,
    '#title' => t('PEM File'),
    '#default_value' => variable_get('yoti_pem'),
    '#upload_location' => YotiHelper::uploadDir(FALSE),
    '#description' => t('PEM File is the application pem file. It can be downloaded only once from the Keys tab in your Yoti Dashboard.'),
    '#upload_validators' => array(
      'file_validate_extensions' => array('pem'),
    ),
  );

  $form['yoti_settings']['yoti_only_existing'] = array(
    '#type' => 'checkbox',
    '#title' => t('Only allow existing Drupal users to link their Yoti account'),
    '#default_value' => variable_get('yoti_only_existing'),
  );

  $form['yoti_settings']['yoti_user_email'] = array(
    '#type' => 'checkbox',
    '#title' => t('Attempt to link Yoti email address with Drupal account for first time users'),
    '#default_value' => variable_get('yoti_user_email'),
  );

  // Load the file.
  $pemFile = variable_get('yoti_pem');
  if ($pemFile) {
    $file = file_load($pemFile);
    // Change status to permanent.
    if (gettype($file) == 'object') {
      $file->status = FILE_STATUS_PERMANENT;
      // Save.
      file_save($file);
      // Record the module (in this example, user module) is using the file.
      file_usage_add($file, 'yoti', 'yoti_pem', $file->fid);
    }
  }

  return system_settings_form($form);
}
